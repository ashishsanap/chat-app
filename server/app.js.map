{"version":3,"sources":["app.js"],"names":["log","console","then","res","catch","err","error","app","server","http","createServer","use","express","static","__dirname","socketio","require","serveClient","CONFIG","env","path","default","startServer","listen","PORT","IP","get","module","exports"],"mappings":";;;;;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAVA;;;;AAYA,MAAMA,MAAMC,OAAZ;AACA;;AAEA,uBAAeC,IAAf,CAAqBC,GAAD,IAAS;AAC3BF,UAAQD,GAAR,CAAYG,GAAZ;AACA;AACD,CAHD,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdJ,UAAQD,GAAR,CAAYK,GAAZ;AACAL,MAAIM,KAAJ,CAAU,yCAAV,EAAqDD,GAArD;AACD,CAPH;AAQA,MAAME,MAAM,wBAAZ;AACA,MAAMC,SAASC,eAAKC,YAAL,CAAkBH,GAAlB,CAAf;;AAEA;AACA;;AAEAA,IAAII,GAAJ,CAAQ,eAAR,EAAyBC,kBAAQC,MAAR,CAAeC,YAAY,eAA3B,CAAzB;;AAEA;AACA,IAAIC,WAAWC,QAAQ,WAAR,EAAqBR,MAArB,EAA6B;AAC1CS,eAAaC,sBAAOC,GAAP,KAAe,YADc;AAE1CC,QAAM;AAFoC,CAA7B,CAAf;AAIAJ,QAAQ,mBAAR,EAA6BK,OAA7B,CAAqCN,QAArC;AACAC,QAAQ,kBAAR,EAA4BK,OAA5B,CAAoCd,GAApC;AACAS,QAAQ,UAAR,EAAoBK,OAApB,CAA4Bd,GAA5B;;AAGA;AACA,SAASe,WAAT,GAAuB;AACrBd,SAAOe,MAAP,CAAcL,sBAAOM,IAArB,EAA2BN,sBAAOO,EAAlC,EAAsC,MAAM;AAC1CzB,QAAIA,GAAJ,CAAQ,4CAAR,EAAsDkB,sBAAOM,IAA7D,EAAmEjB,IAAImB,GAAJ,CAAQ,KAAR,CAAnE;AACD,GAFD;AAGD;;AAED,4BAAaJ,WAAb;;AAGA;AACAK,OAAOC,OAAP,GAAiBrB,GAAjB;AACAqB,UAAUD,OAAOC,OAAjB","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\nimport express from 'express';\nimport http from 'http';\n\nimport connectMongo from './config/mongo';\nimport CONFIG from './config/environment';\nimport expressConfig from './config/express';\nimport registerRoutes from './routes';\n\nconst log = console;\n// Setup server\n\nconnectMongo().then((res) => {\n  console.log(res);\n  // startServer();\n})\n  .catch((err) => {\n    console.log(err);\n    log.error('Server failed to start due to error: %s', err);\n  });\nconst app = express();\nconst server = http.createServer(app);\n\n// expressConfig(app);\n// registerRoutes(app);\n\napp.use('/node_modules', express.static(__dirname + '/node_modules'));\n\n// var server = http.createServer(app);\nvar socketio = require('socket.io')(server, {\n  serveClient: CONFIG.env !== 'production',\n  path: '/socket.io-client'\n});\nrequire('./config/socketio').default(socketio);\nrequire('./config/express').default(app);\nrequire('./routes').default(app);\n\n\n// Start server\nfunction startServer() {\n  server.listen(CONFIG.PORT, CONFIG.IP, () => {\n    log.log('Express server listening on %d, in %s mode', CONFIG.PORT, app.get('env'));\n  });\n}\n\nsetImmediate(startServer);\n\n\n// Expose app\nmodule.exports = app;\nexports = module.exports;\n"]}