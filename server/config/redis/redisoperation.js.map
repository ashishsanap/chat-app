{"version":3,"sources":["config/redis/redisoperation.js"],"names":["add","getValue","redis","require","key","value","findOneAndUpdate","$set","upsert","then","result","resolve","reject","findOne"],"mappings":";;;;;;;;;;QASgBA,G,GAAAA,G;QAIAC,Q,GAAAA,Q;;;;AAbhB;;AAEA;AACA,MAAMC,QAAQC,QAAQ,0BAAR,CAAd;AACA;AACA;AACA;AACA;;AAEO,SAASH,GAAT,CAAaI,GAAb,EAAkBC,KAAlB,EAAyB;AAC9B,SAAOH,MAAMI,gBAAN,CAAuB,EAAEF,GAAF,EAAvB,EAAgC,EAAEG,MAAM,EAAEF,KAAF,EAAR,EAAhC,EAAqD,EAAEG,QAAQ,IAAV,EAArD,EAAuEC,IAAvE,CAA4EC,UAAUA,MAAtF,CAAP;AACD;;AAEM,SAAST,QAAT,CAAkBG,GAAlB,EAAuB;AAC5B,SAAO,sBAAY,CAACO,OAAD,EAAUC,MAAV,KAAqB;AACtCV,UAAMW,OAAN,CAAc,EAAET,GAAF,EAAd,EAAuBK,IAAvB,CAA4BC,UAAUC,QAAQD,MAAR,CAAtC;AACD,GAFM,CAAP;AAGD","file":"redisoperation.js","sourcesContent":["/* eslint-disable import/prefer-default-export,max-len */\n\n// const redisClient = require('./index').redisClient;\nconst redis = require('../../models/redis.model');\n//\n// export function set(key, value) {\n//   redisClient.set(key, value);\n// }\n\nexport function add(key, value) {\n  return redis.findOneAndUpdate({ key }, { $set: { value } }, { upsert: true }).then(result => result);\n}\n\nexport function getValue(key) {\n  return new Promise((resolve, reject) => {\n    redis.findOne({ key }).then(result => resolve(result));\n  });\n}\n"]}